if (x1, y1, x2, y2) {
    if x1 == x2 && y1 == y2
} 
no draw
if (x1 !== x2 && y1 === y2) {
    // x1 = 8, x2 = 5;
    diff = x2-x1 // -3
    for (int i = 0; i < abs (diff); i++) {
    draw = x1 + (sign(diff) * i), y1
    }
}

if (x1 === x2 && y1 !== y2) {
    // y1 = 8, y2 = 5;
    diff = y2-y1 // -3
    for (int i = 0; i < abs (diff); i++) {
    draw = x1, y1 + (sign(diff) * i)
    }
}

if (x1 !== x2 && y1 !== y2) {
   xOffset =  x2 - x1; // 8 - 5 = +3
   yOffset =  y2 - y1; // 3 - 4 = -1
   
   diagonalNumber = min(abs(xoffset), abs(yoffset));
   diagonalNumber = Math.min(xOffset, yOffset);
   directLineNumber = Math.abs(xOffset - yOffset);
   directLineDirection
   diagonalDirection : 
   if(xoffset > 0 && yoffset < 0) {
    top right
   }
   if(xoffset < 0 && yoffset < 0) {
    top left
   }
   if(xoffset > 0 && yoffset > 0) {
    bot right
   }
   if(xoffset < 0 && yoffset > 0) {
    bot left
   }
   min = 1
   top right
   diff = 2
   if (diff > 0)
   if (xoffset >= 0) {
   if (xoffset + yoffset (-4) < 0) {
   top
   }
   if (yoffset (+4) - xoffset (3) > 0) {
   bot
   } else {
   right
   }
   
   if (xoffset < 0) {
   if (abs(xoffset) (-1) + yoffset (-4) < 0) {
   top
   }
   if (yoffset (+4) - abs(xoffset) (-3) > 0) {
   bot
   } else {
   left
   }
   }
}

sl = 4, 3
sc = 7, -1
xoffset = -3
yoffset = 4 => (yoffset + xoffset) > 0
top

sl = 4, 3
sc = 7, 7
xoffset = -3
yoffset = -4 => (-yoffset + xoffset) > 0
bot

sl = 4, 3
sc = 7, 4
xoffset = -3 => (yoffset + xoffset) < 0
yoffset = -1 
right

sl = 4, 3
sc = 1, 4
sc = 2, 4
xoffset = 2 => (-yoffset + xoffset) < 0
yoffset = -3
left

top
bot
right
left

if ((xOffset - yOffset) > 0) {
 top
} else if (yOffset - xOffset > 0) {
 bot
} else if (xOffset >= 0) {
 right
} else {
 left
 }
}


diagonalNumber : 4 8 AS.js:148:21
directLineNumber : 2, dld.x 0, dld.y -1 AS.js:157:21
sl : 11 5, sc 5 9

xOffset = sl.x - sc.x; // 11 - 5 // 6
yOffset = sl.y - sc.y; // 5 - 9  // -4

xOffset + yOffset = 6 + -4 = 2

2,4 => left  		5-2 = 3    4-4 = 0  
3,4 => left    		
4,4 => left	  	
			
5,4 sl			
			
6,4 => right		
7,4 => right		
8,4 => right		

********************************************************

2,6 => left		xOffset 5-2=3  yOffset 4-6=-2 3+-2=1
2,7 => neutre  		xOffset 5-2=3  yOffset 4-7=-3 3+-3=0
2,8 => bot  		xOffset 5-2=3  yOffset 4-8=-4 3+-4=-1
3,7 => bot		xOffset 5-3=2  yOffset 4-7=-3 2+-3=-1
4,8 => bot		xOffset 5-4=1  yOffset 4-8=-4 1+-4=-3
4,7 => bot   		xOffset 5-4=1  yOffset 4-7=-3 1+-3=-2
4,6 => bot		xOffset 5-4=1  yOffset 4-6=-2 1+-2=-1
-----------------------------------------------------------
2,0 => top  		xOffset 5-2=3  yOffset 4-0=4 3-4=-1
3,1 => top		xOffset 5-3=2  yOffset 4-1=3 2-3=-1
4,0 => top		xOffset 5-4=1  yOffset 4-0=4 1-4=-3
4,1 => top   		xOffset 5-4=1  yOffset 4-1=3 1-3=-2
4,2 => top		xOffset 5-4=1  yOffset 4-2=2 1-2=-1
4,3 => neutre		xOffset 5-4=1  yOffset 4-3=1 1-1=0
4,4 => left		xOffset 5-4=1  yOffset 4-4=0 1-0=1
			
5,4 sl			
		
6,4 => right		xOffset 5-6=-1  yOffset 4-4=0 -1+0=-1
6,3 => neutre		xOffset 5-6=-1  yOffset 4-3=1 -1+1=0
6,2 => top		xOffset 5-6=-1  yOffset 4-2=2 -1+2=1
6,1 => top		xOffset 5-6=-1  yOffset 4-1=3 -1+3=2
6,0 => top		xOffset 5-6=-1  yOffset 4-0=4 -1+4=3	  	
7,1 => top	 	xOffset 5-7=-2  yOffset 4-1=3 -2+3=1 
8,0 => top	  	xOffset 5-8=-3  yOffset 4-0=4 -3+4=1
-----------------------------------------------------------
6,4 => right		xOffset 5-6=-1  yOffset 4-4=+0 -1+0=-1
6,5 => neutre  		xOffset 5-6=-1  yOffset 4-5=-1 -1--1=0
6,6 => bot  		xOffset 5-6=-1  yOffset 4-6=-2 -1--2=1
6,7 => bot		xOffset 5-6=-1  yOffset 4-7=-3 -1--3=2
6,8 => bot		xOffset 5-6=-1  yOffset 4-8=-4 -1--4=3
7,7 => bot   		xOffset 5-7=-2  yOffset 4-7=-3 -2--3=1
8,8 => bot		xOffset 5-8=-3  yOffset 4-8=-4 -3--4=1


// xOffset < 0 && yOffset > 0
right or top
// xOffset < 0 && yOffset < 0
right or bot

// xOffset > 0 && yOffset > 0
left or top
// xOffset > 0 && yOffset < 0
left or bot






